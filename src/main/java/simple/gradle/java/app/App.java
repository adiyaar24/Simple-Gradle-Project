/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package simple.gradle.java.app;
import io.harness.cf.client.api.*;
import io.harness.cf.client.dto.Target;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
public class App {
  public static int getSum(int num1, int num2) { return num1 + num2; }
  private static String apiKey = "5d4e1587-9351-4ea4-a438-50b5b90f94d4";

  // Flag Identifier
  private static String flagIdentifier = "ff_java_testing";

  private static final ScheduledExecutorService scheduler =
      Executors.newScheduledThreadPool(1);

  public static void main(String[] args) {
    System.out.println("Harness SDK Getting Started");

    try {
      // Create a Feature Flag Client
      CfClient cfClient = new CfClient(apiKey);
      cfClient.waitForInitialization();

      final Target target = Target.builder()
                                .identifier("javasdk")
                                .name("JavaSDK")
                                .attribute("location", "emea")
                                .build();

      // Loop forever reporting the state of the flag
      scheduler.scheduleAtFixedRate(() -> {
        boolean result = cfClient.boolVariation(flagIdentifier, target, false);
        System.out.println("Boolean variation is " + result);
      }, 0, 10, TimeUnit.SECONDS);

    } catch (Exception e) {
      e.printStackTrace();
    } finally {
      // Close the SDK
      CfClient.getInstance().close();
    }

  }
}
